function [lambda_1_opt, lambda_2_opt, ratio_z] = validData(checkData,...
    lambda_1, lambda_2, w_1, b_1, w_2, b_2, plot_fig)
    %% Judge...
    if ~exist('plot_fig', 'var')
        plot_fig = 0;
    end

    %% Processing...
    X = checkData(:, 1 : end - 1);

    lambda_1_num = length(b_1);
    lambda_2_num = length(b_2);

    ratio_z = [];

    %% Iteration...
    for i = 1 : lambda_1_num
        for j = 1 : lambda_2_num
            c = abs(X * w_1(:, i) + b_1(i)) / sqrt(w_1(:, i)' * w_1(:, i));
            d = abs(X * w_2(:, j) + b_2(j)) / sqrt(w_2(:, j)' * w_2(:, j));

            cnt = 0;
            
            for id = 1 : size(checkData, 1)
                if checkData(id, end) == 1 && c(id) < d(id)
                    cnt = cnt + 1;
                end
                if checkData(id, end) ~= 1 && c(id) >= d(id)
                    cnt = cnt + 1;
                end
            end
            
            ratio_z(i, j) = cnt / size(checkData, 1) * 100;
        end
    end
    
    max_acc = max(max(ratio_z));
    [lambda_1_opt, lambda_2_opt] = find(ratio_z == max_acc);

    fprintf('[VALID] Optimal Params: (%d, %d) -> ', lambda_1_opt, lambda_2_opt);
    fprintf('(%.4f, %.4f)\n', lambda_1(lambda_1_opt), lambda_2(lambda_2_opt));
    fprintf('[VALID] Max Accuracy: %.2f%%\n', max_acc);
    

    %% Plot
    if plot_fig ~= 0
        plot_valid_heatmap();
    end
    
end